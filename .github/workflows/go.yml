name: Go
on:
  pull_request:
    branches:
    - main
    - release-*
  push:
    branches:
    - main
    - release-*
jobs:

  get-go-version:
    name: Get Go version for use by other jobs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        show-progress: false
    - name: Read build/deps/go-version
      id: read-version
      run: echo "go-version=$(head -n 1 build/deps/go-version)" >> $GITHUB_OUTPUT
    outputs:
      go-version: ${{ steps.read-version.outputs.go-version }}

  test-unit:
    name: Unit test
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:

    - name: Check-out code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ needs.get-go-version.outputs.go-version }}

    - name: Run unit tests
      run: make test-unit

    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: .coverage/coverage_unit.txt
        disable_search: true
        flags: unit-tests
        name: codecov-unit-test

  test-integration:
    name: Integration test
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:

    - name: Check-out code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ needs.get-go-version.outputs.go-version }}

    - name: Run integration tests
      run: make test-integration

    - name: Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: .coverage/coverage_integration.txt
        disable_search: true
        flags: integration-tests
        name: codecov-integration-test

  codegen:
    name: Check code generation
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:

    - name: Check-out code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ needs.get-go-version.outputs.go-version }}

    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        version: '3.15.0'

    - name: Check code generation
      run: ./ci/check_codegen.sh


  manifest:
    name: Check manifest
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:

    - name: Check-out code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ needs.get-go-version.outputs.go-version }}

    - name: Check manifest
      run: ./ci/check_manifest.sh


  golangci-lint:
    name: Golangci-lint
    runs-on: ubuntu-latest
    needs: get-go-version
    steps:

      - name: Check-out code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ needs.get-go-version.outputs.go-version }}

      - name: Run golangci-lint
        run: make golangci
